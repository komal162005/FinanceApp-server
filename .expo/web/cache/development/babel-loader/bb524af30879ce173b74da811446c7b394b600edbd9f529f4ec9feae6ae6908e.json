{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Register = function Register(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    Confpassword = _useState8[0],\n    setConfpassword = _useState8[1];\n  var _useState9 = useState(null),\n    _useState10 = _slicedToArray(_useState9, 2),\n    errorMsg = _useState10[0],\n    setErrorMsg = _useState10[1];\n  var submit = function submit() {\n    if (name == '') {\n      setErrorMsg('Name required!!');\n      return;\n    }\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(ImageBackground, {\n      source: require(\"../compo/BG.png\"),\n      resizeMode: \"cover\",\n      style: styles.image,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Sing Up\"\n      }), errorMsg ? _jsx(Text, {\n        style: styles.err,\n        children: errorMsg\n      }) : null, _jsxs(View, {\n        style: styles.wrapper,\n        children: [_jsx(TextInput, {\n          style: styles.input,\n          value: name,\n          placeholder: \"Enter Name\",\n          onChangeText: function onChangeText(text) {\n            return setName({\n              name: text\n            });\n          }\n        }), _jsx(TextInput, {\n          style: styles.input,\n          value: email,\n          placeholder: \"Enter email\",\n          onChangeText: function onChangeText(text) {\n            return setEmail({\n              email: text\n            });\n          }\n        }), _jsx(TextInput, {\n          style: styles.input,\n          value: password,\n          placeholder: \"Enter password\",\n          secureTextEntry: true,\n          onChangeText: function onChangeText(text) {\n            return setPassword({\n              password: text\n            });\n          }\n        }), _jsx(TextInput, {\n          style: styles.input,\n          value: Confpassword,\n          placeholder: \"confirmer password\",\n          secureTextEntry: true,\n          onChangeText: function onChangeText(text) {\n            return setConfpassword({\n              Confpassword: text\n            });\n          }\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            submit();\n          },\n          style: styles.btn,\n          children: _jsx(Text, {\n            children: \"REGISTER\"\n          })\n        }), _jsxs(View, {\n          style: {\n            flexDirection: 'row',\n            marginTop: 20\n          },\n          children: [_jsx(Text, {\n            children: \"Already have an accoutn? \"\n          }), _jsx(TouchableOpacity, {\n            style: styles.button,\n            onPress: function onPress() {\n              return navigation.navigate('Login');\n            },\n            children: _jsx(Text, {\n              style: styles.link,\n              children: \"Login\"\n            })\n          })]\n        })]\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  err: {\n    color: 'red',\n    alignSelf: 'center',\n    marginTop: 10,\n    fontSize: 20,\n    padding: 10,\n    backgroundColor: 'white'\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    height: '100%'\n  },\n  image: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: 'center',\n    height: '100%',\n    width: '100%'\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    paddingBottom: 40,\n    fontFamily: 'sans-serif-condensed'\n  },\n  wrapper: {\n    width: '80%'\n  },\n  input: {\n    padding: 5,\n    marginBottom: 12,\n    borderWidth: 1,\n    borderColor: 'black',\n    borderRadius: 10,\n    paddingHorizontal: 10,\n    borderColor: '#e63946'\n  },\n  link: {\n    color: 'blue'\n  },\n  btn: {\n    marginHorizontal: 25,\n    borderWidth: 1,\n    marginTop: 30,\n    paddingHorizontal: 10,\n    backgroundColor: '#e63946',\n    borderRadius: 10,\n    paddingVertical: 6,\n    borderColor: '#e63946',\n    alignItems: 'center',\n    width: '100%',\n    alignSelf: 'center'\n  }\n});\nexport default Register;","map":{"version":3,"names":["React","useContext","useState","Button","Text","TextInput","TouchableOpacity","View","StyleSheet","ImageBackground","jsx","_jsx","jsxs","_jsxs","Register","_ref","navigation","_useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","Confpassword","setConfpassword","_useState9","_useState10","errorMsg","setErrorMsg","submit","style","styles","container","children","source","require","resizeMode","image","title","err","wrapper","input","value","placeholder","onChangeText","text","secureTextEntry","onPress","btn","flexDirection","marginTop","button","navigate","link","create","color","alignSelf","fontSize","padding","backgroundColor","flex","alignItems","height","justifyContent","width","fontWeight","paddingBottom","fontFamily","marginBottom","borderWidth","borderColor","borderRadius","paddingHorizontal","marginHorizontal","paddingVertical"],"sources":["C:/projects/reactnative/my-project/screens/Register.js"],"sourcesContent":["import React, { useContext,useState} from 'react';\r\nimport {\r\n  Button,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  View,\r\n  StyleSheet,\r\n  ImageBackground,\r\n} from 'react-native';\r\nconst Register = ({navigation}) => {\r\n\r\n  const [name,setName] = useState(null);\r\n  const [email,setEmail] = useState(null); \r\n  const [password,setPassword] = useState(null);\r\n  const [Confpassword,setConfpassword] = useState(null);\r\n\r\n  const [errorMsg,setErrorMsg]=useState(null);\r\n  const submit=()=>{\r\n    if(name==''){\r\n      setErrorMsg('Name required!!');\r\n      return;\r\n    }\r\n  }\r\n  return (\r\n    <View style={styles.container}>\r\n    <ImageBackground source={require('../compo/BG.png')} resizeMode='cover' style={styles.image}>\r\n      <Text style={styles.title}>Sing Up</Text>\r\n      {\r\n        errorMsg ? <Text style={styles.err}>{errorMsg}</Text> : null\r\n      }\r\n      <View style={styles.wrapper}>\r\n        <TextInput \r\n        style={styles.input}\r\n        value={name}\r\n        placeholder=\"Enter Name\"\r\n        onChangeText={(text)=>setName({name:text})}/>\r\n        <TextInput\r\n          style={styles.input}\r\n          value={email}\r\n          placeholder=\"Enter email\"\r\n          onChangeText={(text)=>setEmail({email:text})}\r\n        />\r\n        <TextInput\r\n          style={styles.input}\r\n          value={password}\r\n          placeholder=\"Enter password\"\r\n          secureTextEntry={true}\r\n          onChangeText={(text)=>setPassword({password:text})}\r\n        />\r\n\r\n        <TextInput\r\n          style={styles.input}\r\n          value={Confpassword}\r\n          placeholder=\"confirmer password\"\r\n          secureTextEntry={true}\r\n          onChangeText={(text)=>setConfpassword({Confpassword:text})}\r\n        />\r\n\r\n        <TouchableOpacity onPress={()=>{submit();}} style={styles.btn}>\r\n          <Text>REGISTER</Text>\r\n        </TouchableOpacity>\r\n\r\n        <View style={{flexDirection: 'row', marginTop: 20}}>\r\n          <Text>Already have an accoutn? </Text>\r\n          <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('Login')}>\r\n            <Text style={styles.link}>Login</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        \r\n      </View>\r\n     </ImageBackground>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  err:{\r\n    color:'red',\r\n    alignSelf:'center',\r\n    marginTop:10,\r\n    fontSize:20,\r\n    padding:10,\r\n    backgroundColor:'white'\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    alignItems:'center',\r\n    height:'100%',\r\n    \r\n  },\r\n  image: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: 'center',\r\n    height:'100%',\r\n    width:'100%'\r\n  },\r\n  title:{\r\n    fontSize:30,\r\n    fontWeight:'bold',\r\n    paddingBottom:40,\r\n    fontFamily:'sans-serif-condensed'\r\n  },\r\n  wrapper: {\r\n    width: '80%',\r\n  },\r\n  input: {\r\n    padding:5,\r\n    marginBottom: 12,\r\n    borderWidth: 1,\r\n    borderColor: 'black',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 10,\r\n    borderColor:'#e63946'\r\n  },\r\n  link: {\r\n    color: 'blue',\r\n  },\r\n  btn:{\r\n      marginHorizontal:25,\r\n      borderWidth:1,\r\n      marginTop:30,\r\n      paddingHorizontal:10,\r\n      backgroundColor:'#e63946',\r\n      borderRadius:10,\r\n      paddingVertical:6,\r\n      borderColor:'#e63946',\r\n      alignItems:'center',\r\n      width:'100%',\r\n      alignSelf:'center'\r\n  }\r\n});\r\n\r\nexport default Register;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}